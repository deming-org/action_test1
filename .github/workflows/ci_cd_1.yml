name: ci_cd_1

# 触发workflow的条件
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    # inputs:
    #   environment:
    #     description: '环境'
    #     required: true
    #     type: environment
env:
  WF_ENV: ${{ vars.ENV }}
# 组成工作流的jobs， 包含一个以上的job
jobs:
  build:
    runs-on: ubuntu-latest
    # environment: ${{ inputs.environment }}
    env:
      JB1_ENV: ${{ vars.ENV }}
    steps:
      # - name: 拉取代码
      #   uses: actions/checkout@v4
      #   with: 
      #     ref: ${{ github.REF_NAME }}
      # - name: 设置编译环境（python）
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: '3.9.13'
      #     architecture: 'x64'
      # - name: 安装依赖（测试代码需要）
      #   run: |
      #     python -c "import sys; print(sys.version)"
      #     python -m pip install --upgrade pip
      #     # pip install -r requirements.txt
      # - name: 测试代码
      #   run: python app.py
      - name: 执行编译
        run: |
          echo -e "job_id：$GITHUB_JOB  事件：$GITHUB_EVENT_NAME  操作人：$GITHUB_ACTOR - $GITHUB_ACTOR_ID"
          echo "workflow链接：$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/workflows/${GITHUB_WORKFLOW}.yml"
          echo -e "本次运行详细链接：$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          echo "配置变量var1：${{ vars.VAR1 }}"
          echo "workflow变量 - 流级别: ${{ env.WF_ENV }}\tworkflow变量 - 作业级别：$JB1_ENV - ${JB1_ENV}"
          echo -e "配置变量-环境级别：${{ vars.ENV }}\t配置变量-仓库级别：${{ vars.REPO_VAR }}\t配置变量-组织级别：${{ vars.ORG_VAR }}"
          pwd && ls -a
          echo -e "\033[36m我是编译脚本，执行完成\033[0m" 
  #     - name: 打包压缩
  #       run: |
  #         rm -rf .git*
  #         tar -zcvf ${{ github.WORKFLOW }}_${ENV_CODE}_${{ github.sha }}.tgz *
  #         ls -l ${{ github.WORKFLOW }}_${ENV_CODE}_${{ github.sha }}.tgz && tar -tzvf ${{ github.WORKFLOW }}_${ENV_CODE}_${{ github.sha }}.tgz
  #     - name: 上传到artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: app-build
  #         path: ${{ github.WORKFLOW }}_${{ env.ENV_CODE }}_${{ github.sha }}.tgz
  # deploy:
  #   needs:
  #     - build
  #   runs-on: ubuntu-latest
  #   environment: ${{ inputs.environment }}
  #   env:
  #     ENV_CODE: ${{ vars.ENV }}
  #   steps:
  #     - name: 下载制品
  #       uses: actions/download-artifact@v2.1.1
  #       with:
  #         # Artifact name
  #         name: app-build
  #     - name: 上传服务器
  #       run: ls -a && echo "我是上传服务器"
  #     - name: 服务器部署操作
  #       run: echo "解压缩到指定目录， 用户权限， 重启进程"
  #     - name: 发送通知
  #       run: echo "飞书机器人通知"

          
