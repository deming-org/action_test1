name: ci_cd_1

# 触发workflow的条件
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: '环境'
        required: true
        type: environment

# 组成工作流的jobs， 包含一个以上的job
jobs:
  build:
    runs-on: ubuntu-latest
    # 必须指定才能使用 环境级别的配置变量
    environment: dev
    steps:
      - name: 拉取代码
        uses: actions/checkout@v4
        with: 
          ref: ${{ github.REF_NAME }}
      - name: 设置编译环境（python）
        uses: actions/setup-python@v4
        with:
          python-version: '3.9.13'
      - name: 安装依赖（测试代码需要）
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install --upgrade pip
          # pip install -r requirements.txt
      - name: 测试代码
        run: python app.py
      - name: 执行编译
        run: |
          echo -e "job_id：$GITHUB_JOB  事件：$GITHUB_EVENT_NAME  操作人：$GITHUB_ACTOR - $GITHUB_ACTOR_ID"
          echo "workflow链接：$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/workflows/${GITHUB_WORKFLOW}.yml"
          echo -e "本次运行详细链接：$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          echo -e "环境代号-workflow输入 - ${{ inputs.environment }}"
          echo -e "配置变量-环境级别：${{ vars.ENV }}\t配置变量-仓库级别：${{ vars.REPO_VAR }}\t配置变量-组织级别：${{ vars.ORG_VAR }}"
          pwd && ls -a
          echo -e "\033[36m我是编译脚本，执行完成\033[0m" 
      - name: 打包压缩
        run: |
          rm -rf .git*
          tar -zcvf ${{ github.WORKFLOW }}_${{ vars.env }}_${{ github.sha }}.tgz *
          ls -l ${{ github.WORKFLOW }}_${{ vars.env }}_${{ github.sha }}.tgz && tar -tzvf ${{ github.WORKFLOW }}_${{ vars.env }}_${{ github.sha }}.tgz
      - name: 上传到artifact
        uses: actions/upload-artifact@v3.1.3
        with:
          name: app-build
          path: ${{ github.WORKFLOW }}_${{ vars.env }}_${{ github.sha }}.tgz
          
  deploy:
    needs:
      - build
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: 下载制品
        uses: actions/download-artifact@v3.0.2
        with:
          # Artifact name
          name: app-build
      - name: 上传服务器
        # run: ls -a && echo "我是上传服务器"
        uses: easingthemes/ssh-deploy@v4.1.10
        with:
          # Private key part of an SSH key pair
          SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
          # Remote host
          REMOTE_HOST: ${{ secrets.SSH_HOST }}
          # Remote user
          REMOTE_USER: ${{ secrets.SSH_USER }}
          # 源目录，目录相对于`$GITHUB_WORKSPACE` root, eg: `dist/`
          SOURCE: ./${{ github.WORKFLOW }}_${{ vars.env }}_${{ github.sha }}.tgz
          # 目标目录
          TARGET: /data/
          # # Remote port
          # REMOTE_PORT: 22
          # # Arguments to pass to rsync
          # ARGS: # optional, default is -rlgoDzvc -i
          # # An array of ssh arguments, they must be prefixed with -o and separated by a comma, for example: -o SomeArgument=no, -o SomeOtherArgument=5 
          # SSH_CMD_ARGS: # optional, default is -o StrictHostKeyChecking=no
          # # paths to exclude separated by `,`, ie: `/dist/, /node_modules/`
          # EXCLUDE: # optional, default is 
          # # Script to run on host machine before rsync
          # SCRIPT_BEFORE: # optional, default is 
          # Script to run on host machine after rsync
          SCRIPT_AFTER: curl -s https://www.cip.cc/; echo "服务器部署（更新目录，用户权限，安装运行环境，重启进程）"
      - name: 飞书通知
        env:
          ACTIONS_FEISHU_TAG: 'v1.3.1'
          INPUT_WEBHOOK: "${{ secrets.FS_ROBOT_TEST }}"
          INPUT_MESSAGE_TYPE: "post"
          INPUT_TITLE: "${{ github.WORKFLOW }}流水线通知"
          INPUT_CONTENT: "仓库地址: ${{ github.repository }}\n发布环境：${{ vars.env }}\n执行人：4${{ github.ACTOR }}\njob名称：$GITHUB_JOB\n运行状态：成功"
        run: |
          wget -q https://github.com/xiachufang/actions-feishu/releases/download/${{ env.ACTIONS_FEISHU_TAG }}/linux-amd64-actions-feishu.tar.gz
          tar zxf linux-amd64-actions-feishu.tar.gz feishu
          ./feishu

          
